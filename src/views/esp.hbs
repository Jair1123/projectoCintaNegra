<script src='/javascript/mqttws31.js' type='text/javascript'></script>
<!-- https://api.cloudmqtt.com/sso/js/mqttws31.js -->
<link rel="stylesheet" href="/css/esp.css">

<div class="containere d-flex justify-content-center">
    <div class="bodyesp ">
        <div class="bloque">
            <p class="titulos">Sensores:</p>
        </div>
        <div class="bloque ">
            <a>Temperatura: </a>
            <a id="temperatura">-</a>
        </div>
        <div class="bloque">
            <a>Puerta: </a>
            <a id="pulsador">-</a>
        </div>
        <div class="bloque">
            <a>Salida Digital: </a>
            <a id="salidaDigital">-</a>
        </div>
        {{!-- <div class="bloque">
            <a>Salida Analógica: </a>
            <a id="salidaAnalogica">-</a>
        </div> --}}
        <div class="bloque">
            <p class="titulos">Acciones:</p>
        </div>
        <div class="bloque">
            <a>Luces: </a>
            <button class="btn btn-primary mr-3" type='button' onclick='OnOff("ON")'>Apagadas</button>
            <button class="btn btn-primary" type='button' onclick='OnOff("OFF")'>Prendidas</button>
        </div>
        
    </div>
</div>
<script>
    usuario = 'enaeteby';
    contrasena = 'frF-bTU_Ct51';

    function OnOff(dato) {
        message = new Paho.MQTT.Message(dato);
        message.destinationName = '/' + usuario + '/salidaDigital'
        client.send(message);
    };

    

    // called when the client connects
    function onConnect() {
        // Once a connection has been made, make a subscription and send a message.
        console.log("onConnect");
        client.subscribe("#");
    }

    // called when the client loses its connection
    function onConnectionLost(responseObject) {
        if (responseObject.errorCode !== 0) {
            console.log("onConnectionLost:", responseObject.errorMessage);
            setTimeout(function () { client.connect() }, 5000);
        }
    }

    // called when a message arrives
    function onMessageArrived(message) {
        if (message.destinationName == '/' + usuario + '/' + 'temperatura') { //acá coloco el topic
            document.getElementById("temperatura").textContent = message.payloadString + " ºC";
        }
        if (message.destinationName == '/' + usuario + '/' + 'pulsador') { //acá coloco el topic
            document.getElementById("pulsador").textContent = message.payloadString;
        }
        if (message.destinationName == '/' + usuario + '/' + 'salidaDigital') { //acá coloco el topic
            document.getElementById("salidaDigital").textContent = message.payloadString;
        }
       
    }

    function onFailure(invocationContext, errorCode, errorMessage) {
        var errDiv = document.getElementById("error");
        errDiv.textContent = "Could not connect to WebSocket server, most likely you're behind a firewall that doesn't allow outgoing connections to port 39627";
        errDiv.style.display = "block";
    }

    var clientId = "ws" + Math.random();
    // Create a client instance
    var client = new Paho.MQTT.Client("soldier.cloudmqtt.com", 34591, clientId);

    // set callback handlers
    client.onConnectionLost = onConnectionLost;
    client.onMessageArrived = onMessageArrived;

    // connect the client
    client.connect({
        useSSL: true,
        userName: usuario,
        password: contrasena,
        onSuccess: onConnect,
        onFailure: onFailure
    });        
</script>